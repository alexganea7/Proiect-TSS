pipeline {
    agent any
    stages {
       stage('Clean') {
            steps {
                sh 'rm -f *.gcda *.gcno'
            }
        }
        stage('Build') {
            steps {
                sh 'g++ -o tests tests.cpp /lib/libgtest.a --coverage'
            }
        }
        stage('Test') {
            steps {
                sh './tests'
            }
        }
        stage('Code Coverage') {
            steps {
                sh 'lcov --no-external --ignore-errors mismatch --ignore-errors inconsistent --capture --directory . --rc geninfo_unexecuted_blocks=1 --rc branch_coverage=1 --filter branch --output-file coverage_output'
                sh 'genhtml -s coverage_output --highlight --legend --output-directory html'
            }
            post {
                always {
                    echo 'Code coverage report available at: ${env.WORKSPACE}/html/index.html'
                }
            }
        }
    }
}
